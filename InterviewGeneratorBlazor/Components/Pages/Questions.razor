@page "/questions/{CategoryId:int}"
@using InterviewGeneratorBlazor.Models
@using InterviewGeneratorBlazor.ViewModels
@inject QuestionViewModel ViewModel
@rendermode InteractiveServer

<h3>Questions</h3>

@if (Category == null)
{
    <p>Category not found.</p>
}
else if (ViewModel == null)
{
    <p>Loading...</p>
}
else
{
    <h3>Questions for @Category.Name</h3>

    @if (!string.IsNullOrEmpty(ViewModel.ErrorMessage))
    {
        <div class="alert alert-danger">@ViewModel.ErrorMessage</div>
    }

    <EditForm Model="@ViewModel.QuestionModel" OnValidSubmit="@(() => ViewModel.SaveQuestion())">
        <div class="mb-2">
            <label>Question Text</label>
            <InputText @bind-Value="ViewModel.QuestionModel.Text" class="form-control" />
        </div>
        <div class="mb-2">
            <label>Answer</label>
            <InputText @bind-Value="ViewModel.QuestionModel.Answer" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary me-2">@((ViewModel.IsEditMode ? "Update" : "Add") + " Question")</button>
        <button type="button" class="btn btn-secondary" @onclick="ViewModel.ResetForm">Cancel</button>
    </EditForm>

    <ul class="list-group mt-3">
        @foreach (var q in ViewModel.Questions)
        {
            <li class="list-group-item d-flex justify-content-between align-items-center">
                <span>
                    <strong>@q.Text</strong> <br />
                    <em>@q.Answer</em>
                </span>
                <span>
                    <button class="btn btn-sm btn-info me-1" @onclick="() => ViewModel.EditQuestion(q)">Edit</button>
                    <button class="btn btn-sm btn-danger" @onclick="() => ViewModel.DeleteQuestion(q.Id)">Delete</button>
                </span>
            </li>
        }
    </ul>
}
